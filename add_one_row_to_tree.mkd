# Add One Row to Tree
## Description:
```
Given the root of a binary tree, then value v and depth d, you need to add a row of nodes with value v at the given depth d. The root node is at depth 1.

The adding rule is: given a positive integer depth d, for each NOT null tree nodes N in depth d-1, create two tree nodes with value v as N's left subtree root and right subtree root. And N's original left subtree should be the left subtree of the new left subtree root, its original right subtree should be the right subtree of the new right subtree root. If depth d is 1 that means there is no depth d-1 at all, then create a tree node with value v as the new root of the whole original tree, and the original tree is the new root's left subtree.
```
### Example 1:
```
Input: 
A binary tree as following:
       4
     /   \
    2     6
   / \   / 
  3   1 5   

v = 1

d = 2

Output: 
       4
      / \
     1   1
    /     \
   2       6
  / \     / 
 3   1   5   
```
### Example 2:
```
Input: 
A binary tree as following:
      4
     /   
    2    
   / \   
  3   1    

v = 1

d = 3

Output: 
      4
     /   
    2
   / \    
  1   1
 /     \  
3       1
```
### Note:

   1. The given d is in range [1, maximum depth of the given tree + 1].
   2. The given binary tree has at least one tree node.
```cpp
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void add(TreeNode* root,int v,int d,int depth)
    {
        if(root==NULL) return;
        if(depth==d-1)
        {
            if(root->left!=NULL)
            {
                TreeNode* temp=root->left;
                root->left=new TreeNode(v);
                root->left->left=temp;
            }
            else
            {
                root->left=new TreeNode(v);
            }
            if(root->right!=NULL)
            {
                TreeNode* temp=root->right;
                root->right=new TreeNode(v);
                root->right->right=temp;
            }
            else
            {
                root->right=new TreeNode(v);
            }
        }
        else 
        {
            add(root->left,v,d,depth+1);
            add(root->right,v,d,depth+1);
        }
    }
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(d==1)
        {
            TreeNode* newroot=new TreeNode(v);
            newroot->val=v;
            newroot->left=root;
            return newroot;
        }
        else
        {
            add(root,v,d,1);
            return root;
        }
    }
};
```
*****************************************
这道题要求我们把特定值插入到指定位置，如果指定位置是根节点，就插入值作为根节点连在最前面。

这道题并没有很高的技巧性，只要按照题目的规定来就可以了。需要注意的一点是，指定位置为空和不为空都要考虑，不能漏了情况。