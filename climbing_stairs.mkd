Climbing Stairs
================
Description:
-----------------------
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

Example 1:
--------
Input: 2<br>
Output:  2<br>
Explanation:  There are two ways to climb to the top.<br>

1. 1 step + 1 step<br>
2. 2 steps<br>

Example 2:
--------------
Input: 3<br>
Output:  3<br>
Explanation:  There are three ways to climb to the top.<br>

1. 1 step + 1 step + 1 step<br>
2. 1 step + 2 steps<br>
3. 2 steps + 1 step<br>




```cpp
class Solution {
public:
    int climbStairs(int n) {
        if(n==1) return 1;
        vector<int>sum(n+2);
        sum[1]=1;
        sum[2]=2;
        int i;
        for(i=3;i<=n;i++)
        {
            sum[i]=sum[i-1]+sum[i-2];
        }
        return sum[i-1];
    }
};
```
*************************
