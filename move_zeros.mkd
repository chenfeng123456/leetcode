Move Zeros
============
Description:
---------------
 Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example： 
-----------------------
given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0]. 


 Note:
 -------------

    1.You must do this in-place without making a copy of the array.
    2.Minimize the total number of operations.

```c
void moveZeroes(int* nums, int numsSize) {
    int *l=nums,*r=nums+numsSize-1;
    while(l<r)
    {
        while(*l!=0)
        {
            l++;
        }
        while(*r==0)
        {
            r--;
        }
        if(l>=r) break;
        for(int *temp=l;temp<r;temp++)
        {
            *temp=*(temp+1);
        }
        *r=0;
    }
}
```
本题我们可以定义两个指针l、r，分别指向数组的最左端和最右端。先让l逐个右移，若所指元素为0则跳出循环；再让r左移，若为=不为0则跳出循环。  **注意，此时我们要检查一下l是否小于r，尽管在while循环的条件里已经加了这一条件。因为如果l>=r，则说明所有的0已经在数组的最后了，再次进行交换会导致错误。**  若l<r，那么我们需要先将l的右边所有元素向左移一位，给最后的0“腾”出位置来，再将最后一位置为0即可。
