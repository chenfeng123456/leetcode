```c
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
void quick_sort(int s[], int l, int r)  
{  
    if (l < r)  
    {  
        int i = l, j = r, x = s[l];  
        while (i < j)  
        {  
            while(i < j && s[j] >= x) // 从右向左找第一个小于x的数  
                j--;    
            if(i < j)   
                s[i++] = s[j];  
              
            while(i < j && s[i] < x) // 从左向右找第一个大于等于x的数  
                i++;    
            if(i < j)   
                s[j--] = s[i];  
        }  
        s[i] = x;  
        quick_sort(s, l, i - 1); // 递归调用   
        quick_sort(s, i + 1, r);  
    }  
}  


int* findDisappearedNumbers(int* nums, int numsSize, int* returnSize) {
    int *result=(int *)malloc(sizeof(int)*numsSize);
    int *a=(int *)malloc(sizeof(int)*numsSize);
    quick_sort(nums,0,numsSize-1);
    for(int i=0;i<numsSize;i++)
    {
        a[i]=i+1;
    }
    for(int i=0;i<numsSize;i++)
    {
        a[nums[i]-1]=0;
    }
    for(int i=0;i<numsSize;i++)
    {
        if(a[i]!=0) 
        {
            result[*(returnSize)]=a[i];
            (*returnSize)++;
        }
    }
    return result;
}
```