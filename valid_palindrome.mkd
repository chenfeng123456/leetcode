Valid Palindrome
=======================
Description:
----------------
 Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

***For example,***
"A man, a plan, a canal: Panama" is a palindrome.
"race a car" is not a palindrome.

Note:
--------
Have you consider that the string might be empty? This is a good question to ask during an interview.

For the purpose of this problem, we define empty string as valid palindrome.



***my code:***
--------
```c
bool isPalindrome(char* s) {
    int size=strlen(s),i,j;
    //char *ss=NULL;
    if(size==0) return 1;
    while(1)
    {
        if(!((s[size-1]>='A'&&s[size-1]<='Z')||(s[size-1]>='a'&&s[size-1]<='z')||(s[size-1]>=48&&s[size-1]<=57)))
        {
            s[size-1]='\0';
            size--;
            if(size==0) return 1;
        }
        if((s[size-1]>='A'&&s[size-1]<='Z')||(s[size-1]>='a'&&s[size-1]<='z')||(s[size-1]>=48&&s[size-1]<=57)) break;
    }
    for(i=0,j=0;i<size;)
    {
        if(!((s[i]>='A'&&s[i]<='Z')||(s[i]>='a'&&s[i]<='z')||(s[i]>=48&&s[i]<=57))) 
        {
            for(int k=i;k<size-1;k++)
            {e-1-i]<='Z'||s[size-1-i]>='a'&&s[size-1-i]<='z')))

                return 0;
            else if(abs(s[i]-s[size-1-i])!=32)
                return 0;
        }
    }
    return 1;
}
```
***nice code:***
---------
```c
bool isPalindrome(char* s) {
    int len = strlen(s);
    if(!len) return true;
    char *p1 = s, *p2 = s + len - 1;
    while(p1 < p2){
        if(!isalnum(*p1)){p1++;continue;}
        if(!isalnum(*p2)){p2--;continue;}
        if((*p1++) != tolower(*p2--)) return false;
    }
    return true;
}
```
*****************
这题做了一上午，最终以	Time Limit Exceeded告终。于是到看了以下别人的代码，确实比我的好很多，灵活使用指针的确能让代码简化不少，并且思路也清晰。   

***我的思路：***  
先判断数组是否为空，若为空，按题目要求返回1。接着再从最后一个开始检查是否为数字或字母，若是则置为空字符，并且size相应的减少1，然后循环回来继续检查，直到最后一个变为数字或字母为止。接下来再从头开始，依次检查每个元素是否为数字或字母，若不是则将其删掉，即将后面的每个元素往前移一位，并将原来的最后一位置为空字符，size减一。最后再判断是否为回文，情况要分的比较细。   

***别人的思路：***   
直接定义两个指针分别指向数组的第一个和最后一个，先判断所指向的元素是否为数字或字母，若不是则跳过；若是，则判断两个指针所指的元素是否相等。   

***几个函数：***   

**isalnum:** 判断字符变量c是否为字母或数字，若是则返回非零，否则返回零。[百度百科](https://baike.baidu.com/item/isalnum/387328?fr=aladdin)<br>   
**tolower:** tolower是一种函数，功能是把字母字符转换成小写，非字母字符不做出处理。和函数int _tolower( int c )功能一样，但是_tolower在VC6.0中头文件要用ctype.h。[百度百科](https://baike.baidu.com/item/tolower/6389989?fr=aladdin)
