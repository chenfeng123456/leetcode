# Implement strStr()
## Description
```
Implement strStr().

Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
```
### Example 1:
```
Input: haystack = "hello", needle = "ll"
Output: 2
```
### Example 2:
```
Input: haystack = "aaaaa", needle = "bba"
Output: -1
```
### Clarification:
```
What should we return when needle is an empty string? This is a great question to ask during an interview.

For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().
```
```python
class Solution:
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if len(needle) == 0:
            return 0
        
        i = 0
        j = 0
        res = 0
        
        while(j < len(haystack)):
            if i >= len(needle):
                return res 
            if haystack[j] == needle[i]:
                if i == 0:
                    res = j
                i += 1
                
            elif i != 0:
                j = res + 1
                i = 0
                continue
            #print("j =", j, "  char =", haystack[j], "  i =", i, "  res =", res)
            j += 1
        #print(i)
        return res if i >= len(needle) else -1
```
*****************************************
这道题思路很简单，但是要注意一点，当我们发现$haystack$的第$j$个字和$needle$的第$i$个不等时，**我们要回到当$i$最后一次等于$0$时的$j$对应的下一个地方**，在这里就是$res+1$处。

其实我们可以有更简单的做法，利用python切片的特性，我们每次从$haystack$当前位置往后切$len(needle)$的长度来与$needle$相比较，这样更简洁也更快。