```cpp
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void add(ListNode* l1,ListNode* l2,int extra)
    {
        if(l1!=NULL&&l2!=NULL)
        {
            int sum=l1->val+l2->val+extra;
            if(sum>=10)
            {
                l1->val=sum%10;
                if(l1->next==NULL)
                {
                    l1->next=new ListNode(1);
                }
                else add(l1->next,l2->next,1);
            }
            else
            {
                l1->val=sum;
                add(l1->next,l2->next,0);
            }
        }
        else if(l1!=NULL&&l2==NULL)
        {
            l1->val+=extra;
            if(l1->val>=10)
            {
                l1->val=l1->val%10;
                if(l1->next==NULL)
                {
                    l1->next=new ListNode(1);
                }
                else add(l1->next,NULL,1);
            }
        }
    }
    
    
    int length(ListNode* l,int len)
    {
        if(l->next==NULL) return len;
        else return length(l->next,len+1);
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int len1=length(l1,1);
        int len2=length(l2,1);
        if(len2>len1)
        {
            add(l2,l1,0);
            return l2;
        }
        else
        {
            add(l1,l2,0);
            return l1;
        }
    }
};
```