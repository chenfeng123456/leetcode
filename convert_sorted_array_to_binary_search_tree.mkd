Convert Sorted Array to Binary Search Tree
======================
Description:
----------------
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Example:
-----------------
Given the sorted array: [-10,-3,0,5,9],

One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:<br>
                  0<br>
              /    \ <br>
          -3        9<br>
          /         / <br>
    -10      5<br>



```c
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* convert(int *nums,int start,int end)
{
    if(start>end) return NULL;
    int root=(start+end)/2;
    struct TreeNode *p=(struct TreeNode *)calloc(1,sizeof(struct TreeNode));
    p->val=nums[root];
    p->left=convert(nums,start,root-1);
    p->right=convert(nums,root+1,end);
    return p;
}



struct TreeNode* sortedArrayToBST(int* nums, int numsSize) {
    struct TreeNode *answer=convert(nums,0,numsSize-1);
    return answer;
}
```
